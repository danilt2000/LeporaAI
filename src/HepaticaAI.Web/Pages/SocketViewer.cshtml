@page
@model SocketViewer
@{
        Layout = null;
}
<!DOCTYPE html>
<html>
<head>
        <meta charset="utf-8" />
        <style>
                html, body
                {
                        margin: 0;
                        padding: 0;
                        background: transparent;
                        height: 100%;
                        width: 100%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                }

                #overlay
                {
                        width: 60vw;
                        max-width: 900px;
                        padding: 16px 24px;
                        background: rgba(0,0,0,.95);
                        color: #fff;
                        font-weight: 700;
                        font-family: 'Segoe UI', sans-serif;
                        border-radius: 18px;
                        text-align: center;
                        word-break: break-word;
                        overflow: hidden;
                        text-shadow: -1px -1px 0 #000,1px -1px 0 #000,-1px 1px 0 #000,1px 1px 0 #000;
                        font-size: 24px;
                        line-height: 1.3;
                }

        </style>
</head>
<body>
        <div id="overlay">Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...Ожидание сообщения...</div>

        <script>
                           const overlay = document.getElementById("overlay");

                const fitText = (element, maxFontSize = 24, minFontSize = 10) => {
                    let fontSize = maxFontSize;
                    element.style.fontSize = fontSize + "px";

                    const fits = () =>
                        element.scrollHeight <= element.clientHeight &&
                        element.scrollWidth <= element.clientWidth;

                    while (!fits() && fontSize > minFontSize) {
                        fontSize--;
                        element.style.fontSize = fontSize + "px";
                    }
                };

                let socket;

                function connectWebSocket() {
                    socket = new WebSocket("wss://localhost:9999/messages");

                    socket.onopen = () => console.log("✅ Socket connected");

                    socket.onmessage = event => {
                        overlay.textContent = event.data;
                        fitText(overlay);
                    };

                    socket.onclose = event => {
                        console.warn("🔌 Socket closed. Reconnecting...");
                        setTimeout(connectWebSocket, 1000);
                    };

                    socket.onerror = error => {
                        console.error("❌ WebSocket error", error);
                        socket.close(); 
                    };
                }

                connectWebSocket();
        </script>
</body>
</html>